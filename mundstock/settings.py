"""
Django settings for mundstock project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
import environ
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Leitura de dados externos
env = environ.Env(DEBUG=(bool, False))
env.read_env(str(BASE_DIR / '.env'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env('DEBUG')
ADMINS = [('Jonas', 'contato@jonasesteves.com')]

ALLOWED_HOSTS = env.list('ALLOWED_HOSTS')

LOGGING = {
    "version": 1,
    "disable_existing_loggers": False,
    "root": {"level": "INFO", "handlers": ["file"]},
    "handlers": {
        "file": {
            "level": "INFO",
            "class": "logging.FileHandler",
            "filename": os.path.join(BASE_DIR, 'logs.log'),
            "formatter": "app",
            "encoding": "utf8",
        },
    },
    "loggers": {
        "django": {
            "handlers": ["file"],
            "level": "INFO",
            "propagate": True
        },
    },
    "formatters": {
        "app": {
            "format": (
                u"%(asctime)s [%(levelname)-8s] "
                "(%(module)s.%(funcName)s) %(message)s"
            ),
            "datefmt": "%Y-%m-%d %H:%M:%S",
        },
    },
}


# Application definition

INSTALLED_APPS = [
    'blog.apps.BlogConfig',
    'core.apps.CoreConfig',
    'gestao.apps.GestaoConfig',
    'financeiro.apps.FinanceiroConfig',
    'pedidos.apps.PedidosConfig',
    'bot.apps.BotConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'tinymce',
]

TINYMCE_DEFAULT_CONFIG = {
    'selector': 'textarea',
    'theme': 'modern',
    'plugins': 'link image preview codesample contextmenu table code lists',
    'toolbar1': 'formatselect | bold italic underline | alignleft aligncenter alignright alignjustify '
               '| bullist numlist | outdent indent | table | link image | codesample | preview code blockquote',
    'contextmenu': 'formats | link image',
    'menubar': False,
    'inline': False,
    'statusbar': True,
    'width': 'auto',
    'height': 360,
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mundstock.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                # 'adminlte2_templates.context_processors.template',
            ],
        },
    },
]

WSGI_APPLICATION = 'mundstock.wsgi.application'
DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASE_NAME = env('DATABASE_NAME')
DATABASE_USER = env('DATABASE_USER')
DATABASE_PASS = env('DATABASE_PASS')
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'CONN_MAX_AGE': 120,
        'NAME': DATABASE_NAME,
        'USER': DATABASE_USER,
        'PASSWORD': DATABASE_PASS,
        'HOST': 'localhost',
        'PORT': '3306',
    }
}



# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'pt-br'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')

MEDIA_URL = '/media/'
MEDIAS_DIRS = [BASE_DIR / 'media']
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

LOG_FILE = os.path.join(BASE_DIR, 'logs.log')


# Configurações de emails.

# EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

EMAIL_HOST = ''
EMAIL_HOST_USER = ''
EMAIL_PORT = ''
EMAIL_USE_TSL = ''
EMAIL_HOST_PASSWORD = ''
DEFAULT_FROM_EMAIL = ''

LOGOUT_REDIRECT_URL = 'core:index'

SANDBOX = env('SANDBOX') == 'on'
CIELO_MERCHANT_ID = env('CIELO_MERCHANT_ID')
CIELO_MERCHANT_KEY = env('CIELO_MERCHANT_KEY')
CIELO_API_URL = env('CIELO_API_URL')
CIELO_QUERY_URL = env('CIELO_QUERY_URL')


TELEGRAM_JONASESTEVES = env('TELEGRAM_JONASESTEVES')
TELEGRAM_IGOR = env('TELEGRAM_IGOR')
TELEGRAM_BOT_PRODUCAO = env('TELEGRAM_BOT_PRODUCAO') == 'on'
TELEGRAM_BOT_TOKEN = env('TELEGRAM_BOT_TOKEN')
TELEGRAM_GRUPO_CLUB = env('TELEGRAM_GRUPO_CLUB')
TELEGRAM_CANAL_CLUB = env('TELEGRAM_CANAL_CLUB')
TELEGRAM_CANAL_ALUNOS = env('TELEGRAM_CANAL_ALUNOS')
TELEGRAM_CANAL_INSIGHTS = env('TELEGRAM_CANAL_INSIGHTS')

URL = env('URL')
